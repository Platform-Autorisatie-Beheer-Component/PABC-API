// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PABC.Data;

#nullable disable

namespace PABC.Data.Migrations
{
    [DbContext(typeof(PabcDbContext))]
    [Migration("20250616081818_AddUniqueConstraintToMappingTable")]
    partial class AddUniqueConstraintToMappingTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DomainEntityType", b =>
                {
                    b.Property<Guid>("DomainId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityTypesId")
                        .HasColumnType("uuid");

                    b.HasKey("DomainId", "EntityTypesId");

                    b.HasIndex("EntityTypesId");

                    b.ToTable("DomainEntityType");
                });

            modelBuilder.Entity("PABC.Data.Entities.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Application")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("Application", "Name")
                        .IsUnique();

                    b.ToTable("ApplicationRoles");
                });

            modelBuilder.Entity("PABC.Data.Entities.Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Domains");
                });

            modelBuilder.Entity("PABC.Data.Entities.EntityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EntityTypeId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Uri")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Type", "EntityTypeId")
                        .IsUnique();

                    b.ToTable("EntityTypes");
                });

            modelBuilder.Entity("PABC.Data.Entities.FunctionalRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("FunctionalRoles");
                });

            modelBuilder.Entity("PABC.Data.Entities.Mapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("ApplicationRoleId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DomainId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("FunctionalRoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.HasIndex("FunctionalRoleId");

                    b.HasIndex("ApplicationRoleId", "DomainId", "FunctionalRoleId")
                        .IsUnique();

                    b.ToTable("Mappings");
                });

            modelBuilder.Entity("DomainEntityType", b =>
                {
                    b.HasOne("PABC.Data.Entities.Domain", null)
                        .WithMany()
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PABC.Data.Entities.EntityType", null)
                        .WithMany()
                        .HasForeignKey("EntityTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PABC.Data.Entities.Mapping", b =>
                {
                    b.HasOne("PABC.Data.Entities.ApplicationRole", "ApplicationRole")
                        .WithMany()
                        .HasForeignKey("ApplicationRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PABC.Data.Entities.Domain", "Domain")
                        .WithMany()
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PABC.Data.Entities.FunctionalRole", "FunctionalRole")
                        .WithMany()
                        .HasForeignKey("FunctionalRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationRole");

                    b.Navigation("Domain");

                    b.Navigation("FunctionalRole");
                });
#pragma warning restore 612, 618
        }
    }
}
