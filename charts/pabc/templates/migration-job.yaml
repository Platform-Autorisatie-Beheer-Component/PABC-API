apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "pabc.fullname" . }}-migrations-{{ .Release.Revision }}
  labels:
    {{- include "pabc.labels" . | nindent 4 }}
spec:
  backoffLimit: 1
  template:
    metadata:
      labels:
        {{- include "pabc.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "pabc.serviceAccountName" . }}
      containers:
      - name: {{ .Chart.Name }}-migrations
        image: "{{ .Values.migrations.image.repository }}:{{ .Values.migrations.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.migrations.image.pullPolicy }}
        envFrom:
          - secretRef:
              name: {{ .Values.existingSecret | default (include "pabc.fullname" .) }}
          - configMapRef:
              name: {{ include "pabc.fullname" . }}
      {{- if .Values.migrations.extraVolumeMounts }}
        volumeMounts:
          {{- include "pabc.tplvalues.render" ( dict "value" .Values.migrations.extraVolumeMounts "context" $ ) | nindent 10 }}
      {{- end }}
    {{- if .Values.migrations.extraVolumes }}
      volumes:
        {{- include "pabc.tplvalues.render" ( dict "value" .Values.migrations.extraVolumes "context" $ ) | nindent 8 }}
    {{- end }}
    {{- if .Values.postgresql.enabled }}
      initContainers:
      - name: "{{ .Chart.Name }}-wait-for-postgresql"
        image: "ghcr.io/groundnuty/k8s-wait-for:v2.0"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args: 
        - "service"
        - "{{ .Release.Name }}-postgresql"
    {{- end }}
      restartPolicy: {{ .Values.migrations.restartPolicy }}